enum DoorbellType {
  OPEN
  CLOSE
  TOGGLE
}

class Doorbell : Enemy {
  var hitBox AABB
  var behavior DoorbellBehavior
  var visible bool
  var rotationPercent = 1.0
  var restingAngle = randInRange(0, TWOPI)
  var triggeredLastTick = false
  var triggeredThisTick = false
  var doors List<int> = []

  def new(center Vector, behavior DoorbellBehavior, visible bool) {
    super(.DOORBELL, 1)
    hitBox = AABB.makeAABB(center, 0.40, Player.HEIGHT + 0.01)
    self.behavior = behavior
    self.visible = visible
  }

  over getShape Shape {
    return hitBox
  }

  def addDoor(doorIndex int) {
    doors.append(doorIndex)
  }

  over canCollide bool {
    return false
  }

  over tick(seconds double) {
    rotationPercent += seconds
    if rotationPercent > 1 {
      rotationPercent = 1
    }

    triggeredThisTick = false
    super(seconds)
    triggeredLastTick = triggeredThisTick
  }

  over reactToPlayer(player Player) {
    triggeredThisTick = true
    if triggeredLastTick {
      return
    }

    for door in doors {
      gameState.getDoor(door).act(behavior, true)
    }

    for i in 0..50 {
      var rotationAngle = randInRange(0, TWOPI)
      Particle.line
        .position(getCenter)
        .velocity(Vector.fromAngle(rotationAngle) * randInRange(3, 5))
        .angle(rotationAngle)
        .radius(0.05)
        .bounces(3)
        .elasticity(0.5)
        .decay(0.01)
        .color(1, 1, 1, 1)
    }

    rotationPercent = 0
  }

  over draw(c Context) {
    if visible {
      var pos = getCenter
      var startingAngle = restingAngle + (TWOPI / 3) / (rotationPercent + 0.1)

      c.setFillColor(.WHITE)
      c.setStrokeColor(.BLACK)
      c.beginPath
      c.arc(pos.x, pos.y, RADIUS, 0, TWOPI, false)
      c.fill
      c.stroke

      c.beginPath
      for i in 0..SLICES {
        c.moveTo(pos.x, pos.y)
        var nextPos = pos + Vector.fromAngle(startingAngle + (i - 0.5) * (TWOPI / SLICES)) * RADIUS
        c.lineTo(nextPos.x, nextPos.y)
      }
      c.stroke
    }
  }
}

namespace Doorbell {
  const RADIUS = 0.11 # Must be wider and taller than the player to avoid double toggling
  const SLICES = 3
}
